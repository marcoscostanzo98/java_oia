import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class SanandoLuchadores {
	
	private List<Luchador> luchadores = new ArrayList<Luchador>();
	private Sanador san;
	private int curacionTotal;
	
	public SanandoLuchadores(Sanador san, List<Luchador> luchadores) {
		this.san = san;
		this.luchadores = luchadores;
	}

	public static void main(String[] args) throws IOException {
		SanandoLuchadores sl = leerArchivo("entrada.in");
		sl.resolver();
		sl.escribirArchivo("salida.out");
	}

	private static SanandoLuchadores leerArchivo(String path) throws FileNotFoundException {
		Scanner sc = new Scanner(new FileReader(path));
		
		List<Luchador> luchadores = new ArrayList<Luchador>();
		
		int cantLuchadores = sc.nextInt();
		Sanador san = new Sanador(sc.nextInt());
		
		for (int i = 0; i < cantLuchadores; i++) {
			Luchador l = new Luchador(sc.nextInt(), sc.nextInt(), sc.nextInt());
			luchadores.add(l);
		}
		
		sc.close();
		
		return new SanandoLuchadores(san, luchadores);
	}
	
	private void resolver() {
		int curacionTotal = 0;
		
		Collections.sort(this.luchadores);
		
		for (Luchador luchador : this.luchadores) {
			
			while (!luchador.tieneVidaMax())
			
			if (this.san.getMagia() >= 3) {
				while (luchador.getVidaActual() < luchador.getVidaInicial()) {
					if (luchador.getDistanciaHealer() == 1) {
						if (luchador.getVidaInicial() - luchador.getVidaActual() >= 10) {
							this.san.restarMagia(3);
							curacionTotal += 10;
							luchador.setVidaActual(10);
						}
						else if (luchador.getVidaInicial() - luchador.getVidaActual() < 10) {
							this.san.restarMagia(3);
							curacionTotal += (luchador.getVidaInicial() - luchador.getVidaActual());
							luchador.setVidaActual((luchador.getVidaInicial() - luchador.getVidaActual()));
						}
					}
					else if (luchador.getDistanciaHealer() == 2) {
						if (luchador.getVidaInicial() - luchador.getVidaActual() >= 10) {
							this.san.restarMagia(5);
							curacionTotal += 10;
							luchador.setVidaActual(10);
						}
						else if (luchador.getVidaInicial() - luchador.getVidaActual() < 10) {
							this.san.restarMagia(5);
							curacionTotal += (luchador.getVidaInicial() - luchador.getVidaActual());
							luchador.setVidaActual((luchador.getVidaInicial() - luchador.getVidaActual()));
						}
					}	
				}
			}
			else {
				break;
			}

		}
		
		this.curacionTotal = curacionTotal;
		
	}
	
	private void escribirArchivo(String path) throws IOException {
		PrintWriter pw = new PrintWriter(new FileWriter(path));
		
		pw.print(this.curacionTotal);
		
		pw.close();
	}
	
}
